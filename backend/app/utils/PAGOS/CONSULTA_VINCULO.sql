/**/
DROP FUNCTION IF EXISTS CONSULTA_VINCULAR_FACTURA ( VARCHAR(20), INTEGER, INTEGER);

CREATE OR REPLACE FUNCTION CONSULTA_VINCULAR_FACTURA ( NRO_FAC_VINCULAR VARCHAR(20), ID_ITEM_AGREGAR INTEGER, ID_CITA_CONSULTA INTEGER)
RETURNS INTEGER
LANGUAGE plpgsql
AS $$
DECLARE 
	CANT_PAGADO INTEGER;
	CANT_USADO INTEGER;
	COD_FACTURA_GET INTEGER;
BEGIN
	SELECT 
		SUM(B.CANTIDAD) AS CANTIDAD INTO CANT_PAGADO
	FROM  FACTURAS_VENTA A
	INNER JOIN DETALLES_FACTURA B ON B.COD_FACTURA = A.COD_FACTURA
	WHERE NUMERO_FACTURA = NRO_FAC_VINCULAR AND B.ID_ITEM = ID_ITEM_AGREGAR AND A.ESTADO = 'V'
	GROUP BY B.ID_ITEM;
	
	IF(CANT_PAGADO IS NULL) THEN
		RETURN 1; --LA FACTURA NO TIENE EL ITEM QUE SE DESEA VINCULAR O NO EXISTE
	END IF;
	
	SELECT 
		COUNT(*) AS CANTIDAD INTO CANT_USADO
	FROM CITAS A
	INNER JOIN FACTURAS_VENTA B ON B.COD_FACTURA = A.COD_FACTURA
	WHERE B.NUMERO_FACTURA = NRO_FAC_VINCULAR AND A.ID_ESPECIALIDAD = ID_ITEM_AGREGAR
	GROUP BY A.ID_ESPECIALIDAD;
	
	SELECT COD_FACTURA INTO COD_FACTURA_GET
	FROM FACTURAS_VENTA
	WHERE NUMERO_FACTURA = NRO_FAC_VINCULAR;
	
	IF(CANT_USADO IS NULL) THEN
		UPDATE CITAS
		SET COD_FACTURA = COD_FACTURA_GET
		WHERE ID_CITA = ID_CITA_CONSULTA;
	
		RETURN 0; --VINCULADO
	ELSIF (CANT_USADO >= CANT_PAGADO) THEN 
		RETURN 2; --LA FACTURA YA NO ACEPTA MAS VINCULACIONES DE ESE ITEM
	ELSE 
		UPDATE CITAS
		SET COD_FACTURA = COD_FACTURA_GET
		WHERE ID_CITA = ID_CITA_CONSULTA;
		
		RETURN 0; --VINCULADO
	END IF;
END;
$$;

SELECT CONSULTA_VINCULAR_FACTURA('001-001-0000011', 1, 1);
SELECT * FROM FACTURAS_VENTA;
SELECT * FROM CITAS;