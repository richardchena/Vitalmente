/*-- REGISTRO DE RANGO DE FECHAS --*/
DROP FUNCTION IF EXISTS REGISTRAR_AGENDA_CONSULTA (PROFESIONALES.ID_PROFESIONAL%TYPE,
												   AGENDAS.FECHA_DESDE%TYPE,
												   AGENDAS.FECHA_DESDE%TYPE);

CREATE OR REPLACE FUNCTION REGISTRAR_AGENDA_CONSULTA (
	ID_PRO PROFESIONALES.ID_PROFESIONAL%TYPE,
	FEC_DES AGENDAS.FECHA_DESDE%TYPE,
	FEC_HAS AGENDAS.FECHA_DESDE%TYPE
)
RETURNS AGENDAS.ID%TYPE
LANGUAGE plpgsql
AS $$
DECLARE
	ID_AGENDA AGENDAS.ID%TYPE;
BEGIN
	/*IF(FEC_DES <= FEC_HAS) THEN
		RAISE EXCEPTION 'La fecha desde no puede ser menor o igual a la fecha desde';
	END IF;*/

	WITH ROWS AS (
		INSERT INTO AGENDAS(ID_PROFESIONAL, FECHA_DESDE, FECHA_HASTA) 
		VALUES(ID_PRO, FEC_DES, FEC_HAS) RETURNING ID
	) SELECT ID INTO ID_AGENDA FROM ROWS;
	
	RETURN ID_AGENDA;
END;
$$;

SELECT * FROM AGENDAS;
select * from dias_consulta;
SELECT REGISTRAR_AGENDA_CONSULTA(10, '29/03/2023', '29/04/2023');

/* REGISTRO DE LOS DIAS DE CONSULTA */
DROP FUNCTION IF EXISTS REGISTRAR_DIAS_CONSULTA (AGENDAS.ID%TYPE,
												 AGENDAS.ID_DIA%TYPE,
												 AGENDAS.ID_ESPECIALIDAD%TYPE,
												 AGENDAS.ID_TURNO%TYPE,
												 AGENDAS.HORA_INICIO%TYPE,
												 AGENDAS.HORA_FIN%TYPE);

CREATE OR REPLACE FUNCTION REGISTRAR_DIAS_CONSULTA (
	ID_AGE AGENDAS.ID%TYPE,
	ID_DIA DIAS_CONSULTA.ID_DIA%TYPE,
	ID_ESP DIAS_CONSULTA.ID_ESPECIALIDAD%TYPE,
	ID_TUR DIAS_CONSULTA.ID_TURNO%TYPE,
	HO_INI DIAS_CONSULTA.HORA_INICIO%TYPE,
	HO_FIN DIAS_CONSULTA.HORA_FIN%TYPE
)
RETURNS INTEGER
LANGUAGE plpgsql
AS $$	 
BEGIN
	INSERT INTO DIAS_CONSULTA(ID_AGENDA, ID_DIA, ID_ESPECIALIDAD, ID_TURNO, HORA_INICIO, HORA_FIN)
	VALUES (ID_AGE, ID_DIA, ID_ESP, ID_TUR, HO_INI, HO_FIN);
	
	RETURN 1; --1: TODO OK

EXCEPTION
	WHEN OTHERS THEN
		RETURN 0; --0: ALGO SALIO MAL
END;
$$;

select * from dias_consulta;
SELECT REGISTRAR_DIAS_CONSULTA(3, 5, 4, 1, '9:00:00', '12:00:00');