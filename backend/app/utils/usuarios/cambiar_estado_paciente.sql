DROP FUNCTION IF EXISTS CAMBIAR_STATUS_PACIENTE(PACIENTES.ID_PACIENTE%TYPE);

CREATE OR REPLACE FUNCTION CAMBIAR_STATUS_PACIENTE (
	ID_PAC PACIENTES.ID_PACIENTE%TYPE
)
RETURNS VOID
LANGUAGE plpgsql
AS $$
DECLARE
	ID_USER USERS.ID%TYPE;
	ESTADO USERS.STATUS%TYPE;
BEGIN
	SELECT ID_USUARIO INTO ID_USER
	FROM PACIENTES
	WHERE ID_PACIENTE = ID_PAC;
	
	SELECT STATUS INTO ESTADO
	FROM USERS
	WHERE ID = ID_USER;
		
	IF ESTADO = 'A' THEN
		UPDATE USERS
		SET STATUS = 'I'
		WHERE ID = ID_USER;
	ELSE 
		IF ESTADO = 'I' THEN
			UPDATE USERS
			SET STATUS = 'A'
			WHERE ID = ID_USER;
		END IF;
	END IF;
END;
$$;

/*ELIMINAR*/
DROP FUNCTION IF EXISTS ELIMINAR_PACIENTE(PACIENTES.ID_PACIENTE%TYPE);

CREATE OR REPLACE FUNCTION ELIMINAR_PACIENTE (
	ID_PAC PACIENTES.ID_PACIENTE%TYPE
)
RETURNS VOID
LANGUAGE plpgsql
AS $$
DECLARE
	ID_USER USERS.ID%TYPE;
	ESTADO USERS.STATUS%TYPE;
BEGIN
	SELECT ID_USUARIO INTO ID_USER
	FROM PACIENTES
	WHERE ID_PACIENTE = ID_PAC;
	
	SELECT STATUS INTO ESTADO
	FROM USERS
	WHERE ID = ID_USER;
		
	UPDATE USERS
	SET STATUS = 'B', FECHA_BAJA = CURRENT_TIMESTAMP
	WHERE ID = ID_USER;
END;
$$;

SELECT ELIMINAR_PACIENTE(15);
SELECT CAMBIAR_STATUS_PACIENTE(6);
